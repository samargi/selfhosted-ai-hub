{
    debug
}

# ---------- Root domain (PRODUCTION) ----------
https://{$DOMAIN} {
    tls {
        alpn http/1.1 h2 acme-tls/1
    }
    log {
        output file /data/logs/production-access.log {
            roll_size 10MiB
            roll_keep 5
            roll_keep_for 720h
        }
        format json
    }
    header {
        X-Frame-Options "SAMEORIGIN"
        X-Content-Type-Options "nosniff"
        Referrer-Policy "strict-origin-when-cross-origin"
    }
    encode zstd gzip
    
    handle_path /langchain* {
        reverse_proxy langchain-api:8010
    }
    handle_path /flowise* {
        reverse_proxy flowise:3000
    }
    
    reverse_proxy openwebui:8080
}

# ---------- Staging subdomain (SAMA KUIN N8N) ----------
https://staging.samarg.ddns.net {
    tls {
        alpn http/1.1 h2 acme-tls/1
    }
    log {
        output file /data/logs/staging-access.log {
            roll_size 10MiB
            roll_keep 5
            roll_keep_for 720h
        }
        format json
    }
    header {
        X-Frame-Options "SAMEORIGIN"
        X-Content-Type-Options "nosniff"
        Referrer-Policy "strict-origin-when-cross-origin"
    }
    encode zstd gzip
    
    reverse_proxy openwebui-staging:8080
}

# ---------- n8n subdomain ----------
https://{$N8N_HOST} {
    tls {
        alpn http/1.1 h2 acme-tls/1
    }
    encode zstd gzip
    
    reverse_proxy n8n:5678 {
        header_up X-Forwarded-Proto {scheme}
        header_up X-Forwarded-Host {host}
        header_up X-Forwarded-For {remote}
    }
}

# ---------- Qdrant dashboard on custom TLS port ----------
https://{$DOMAIN}:4444 {
    tls {
        alpn http/1.1 h2 acme-tls/1
    }
    @docker_net {
        remote_ip 172.18.0.0/16
    }
    handle @docker_net {
        reverse_proxy qdrant:6333
    }
    handle {
        respond "Access Denied" 403
    }
}

# ---------- MinIO console on custom TLS port ----------
https://{$DOMAIN}:4445 {
    tls {
        alpn http/1.1 h2 acme-tls/1
    }
    @docker_net {
        remote_ip 172.18.0.0/16
    }
    handle @docker_net {
        reverse_proxy minio:9001
    }
    handle {
        respond "Access Denied" 403
    }
}